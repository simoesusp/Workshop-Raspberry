A guide to getting started with the Raspberry Pi. 
	- Extracted from: https://www.raspberrypi.org/forums/viewtopic.php?t=4751
	- Modified by Simoes

Summary:
sudo raspi-config
- Ctr-Alt-Backspace --> Logout
- Ctr-Alt-F3 --> Terminate X server and move to terminal
- startx --> Strart the Graphical User Interface (GUI)
sudo halt
sudo reboot

sudo apt-get update
sudo apt-get upgrade



1) Getting started and general questions

- This start guide uses the NOOBS installation system: the latest version of this comes with the Raspbian OS as standard, but other OSes can be installed when you connect the PI to the internet via the ethernet port (this is very easy to do at home with NET modems, but very dificult to do at USP). Forget the others and go for Raspbian!! 

- Protect the bottom of your RaspberryPi board with a tape or plastic material so that it does not touch any metal stuff (keys, pens, peaces of wire...) left on top off the table.

- Connect an HDMI cable from the board to your TV or HDMI Monitor for video and audio output, or to a DVI-D monitor for video only. 
- Warning: If you do not do it before turning power on, Raspberry will not provide HDMI signals after boot. This is very painful, because you wont be able to turn off the board properly without seeing what you are doing.

		- If you don't have a TV or monitor with an HDMI or DVI-D port, there are alternative ways to get audiovisual output. On the models A and B, you can use the yellow RCA jack located in the center of the top edge for video output. For audio output, you can use the 3.5 mm stereo headphone jack to the right of the RCA jack. The models A+ and B+ have a single connector for both audio and video: it is marked "A/V", and is located at the bottom of the board, to the right the HDMI port. You will need an A/V adapter cable.

- Plug a USB keyboard and mouse into the USB slots located on the right edge.
- You can also plug a WiFi adapter into the USB slot for wireless internet access. 


- You will need to prepare a SD card with a proper booting image... by a class 10 card to avoid file system corruption problems. But any SD card will work anyway!
- Warning: Raspberry is NOT Arduino, it has an Operational System running that has to shut down before turning it off.

- Plug in a regulated power supply that is rated at 5V ±5% and at least 700mA (or 0.7A). I would pick atleast a 2A supply to enshure enough current.
- On the RaspberryPi2, the board firmware will flash a colorful (rainbow like) square on the top right corner if it needs more power than your power supply can provide.

		- Anything bigger than 700 mA (like 1000mA) will also work. 
		- Avoid using the smaller chargers used for small GSM phones, as these are often unregulated and unreliable. 
		- The model B+ and the Pi 2 should use adapters of at least 2.5A, but they will probably work with a 700mA adapter, or maybe even less (depending of how much current the USB and HDMI ports use). 
		- Please note, though, that using several USB devices or working on intensive tasks will draw much more current. If the PWR LED goes off, you are providing insufficient power.
		- If you are having problems with power to your Pi, you should not only check the supply itself, but also the cable from the power supply unit to the Pi: frequently, cables can lower the current/voltage going from the power supply unit to the Pi to below the level required for stability. 


2) Installing NOOBS

- Installing NOOBS is very simple: just download (http://www.raspberrypi.org/downloadsthe) NOOBS_v_xxx.zip file and unzip the contents to the new SD card you bought.

- If your SD card is not a new one, before installing NOOBS on your SD card, you must first erase the card completely, and remove all partitions, using the SD Card Association’s formatting tool: https://www.sdcard.org/downloads/formatter_4/index.html. DO NOT use its quick format option, especially if the card has been used before, or the install might fail. NOOBS will partition and format the card as necessary, but it needs to begin with a completely empty card. Please also ensure that you enable the resize option.

- You can find information on how to use the NOOBS installer here: 
https://github.com/raspberrypi/noobs/bl ... x-software

- When you have copied the NOOBS files onto the card, it should contain these files:

18/02/2015  16:26            17.856 bootcode.bin
11/05/2015  15:53               356 BUILD-DATA
19/08/2015  14:55    <DIR>          defaults
18/02/2015  16:23             2.250 INSTRUCTIONS-README.txt
19/08/2015  14:55    <DIR>          os
18/02/2015  16:26                54 recovery.cmdline
18/02/2015  16:26           554.520 recovery.elf
18/02/2015  16:26         2.100.464 recovery.img
18/02/2015  16:26        20.238.331 recovery.rfs
18/02/2015  16:24         2.148.120 recovery7.img
18/02/2015  16:26                 0 RECOVERY_FILES_DO_NOT_EDIT
18/02/2015  16:23             9.728 riscos-boot.bin

- If you just need to install a single OS, and want to save download time and space on the SD card, you could consider using NOOBS LITE instead of NOOBS. NOOBS LITE doesn't come with any OSes included, but the OS to install is downloaded during the installation process. Please note that you will need your Pi to be connected to the internet for this to work.

- Both NOOBS and NOOBS LITE can be found here as free downloads:
http://www.raspberrypi.org/downloads


3) Using your Raspberry Pi

- Once you have finished setting up your Raspberry Pi, it's time to try powering it on and using it. 

- When the Pi begins to receive power, the red LED marked PWR will light.
- The green LED marked OK (or ACK in later version) will blink in an irregular pattern to show whenever the Pi reads from the SD card. 

- If all goes well and the OS boots successfully, the Pi will show a rainbow screen: this is actually four pixels expanded and blended to full screen size by the GPU. Shortly afterwards, the ARM processor starts, and the installed OS begins to load.
- Raspbian starts by showing a long scrolling text that tells you exactly what the Pi is doing to get ready to work. 

- Once the Pi finishes loading the OS, you'll need to put in your user name and password: the default username is "pi", and the default password is "raspberry".

- After that (but only the first time you boot) you will be presented with the "raspi-config" configuration menu.
- You should use this to expand the space on your SD-card to the full size of the card (if you used NOOBS to install the system, it automatic expanded the SD card), and to set the keyboard configuration. You can also use this menu for other basic configuration options such as changing your password.

- If you want to talk to an Arduino or other Raspberrys via hardware serial, don't forget to enable it at: Advanced Options / A8 Serial
- You can also enable to boot direct to the Desktop environment (grafic interface) at: Enable boot to Desktop/Scratch

- The menu won't be shown on later boots, but can be recalled at any time by using the following code:
	sudo raspi-config

- To get into the familiar graphical user interface (GUI), after you have logged in, type 
	startx (CTRL+ALT+F3 go back)

- At the end of your session, when you wish to stop and turn off the Pi, enter following text:
	sudo halt
or
	sudo shutdown -h now

- This will shut the Pi down safely, after which you can turn it off by turning off the power supply. Please do not turn the power supply off without first shutting the Pi down: to do so might damage the SD card's file system. 

		- How to get composite video working with NOOBS: It is important to note that, when you are using NOOBS, and are using a A/V (or composite RCA) video for a regular TV (or mini display with a composite input), you will not immediately get any picture: you need to press 3 (for PAL), or 4 (for NTSC) repeatedly to switch over from HDMI to composite. You should wait a couple of seconds or so before starting to press 3 or 4, as NOOBS need to boot before it can start listening to the keyboard. If you want to know if NOOBS is receiving input from the keyboard, press Caps Lock: if you can toggle the CAPs LED on and off, NOOBS has booted and is reading the keyboard.
		- If the picture is monochrome, you are using the wrong TV standard: try changing from PAL to NTSC, or vice versa.

		- If you are using a HDMI connection, NOOBS should give you a picture automatically, but if it does not, or the picture seems wrong, you can try switching between "safe" and "optimal" HDMI video settings by pressing 1 or 2.

		- After installing (for example) Raspbian, the next reboot will start it rather than NOOBS: Raspbian has a slightly different way with coping with composite video. It will look to see if an HDMI device is connected; if it doesn't see one, it will automatically switch to (NTSC) composite (unless you have saved an overriding video setting into config.txt).

		- If you are using an older PAL TV, you may only get a monochrome picture: you might want to change the entry in config.txt that says "sdtv_mode=0" to "sdtv_mode=2" for PAL. You can also do this from NOOBS: restart while holding down shift and the Pi will boot into NOOBS. Press 3 again for a composite picture and choose the option to edit config.txt, then edit, save, and reboot.

4) Updating and upgrading Raspbian

- Ensure you are connected to the internet, and enter the following code: 
	sudo apt-get update
	sudo apt-get upgrade

- Special instructions for upgrading and updating Raspbian for users of the Pi 2: if you want to update an old RaspberryPi 1 SD card to work on the RaspberryPi 2:
	apt-get update
	apt-get upgrade
	apt-get dist-upgrade
	apt-get install raspberrypi-ui-mods


x---------------x--------------------x
		BILEKI'S GUIDE on How to prepare the SD Card on Linux    ---   
x---------------X--------------------X

1) How to prepare the SD Card on Linux - Without using NOOBS

- Step 1: Insert the SD Card in the laptop card reader.

- Step 2: Open terminal and enter the following command:
	df -h
		This command will list all mounted devices.

- Step 3: Find out which device in the list refers to SD Card (usually /dev/mmcblk0p1 or /dev/ssd1) and unmount it with the command: 
	umount /dev/mmcblk0p1
		"mmcblk0p1"(or "ssd1") must be replaced for the SD Card device name.

- Step 4: Access the folder that contains the OS image file and enter the command:
	dd bs=4M if=2015-05-05-raspbian-wheezy.img of=/dev/mmcblk0, 
		"mmcblk0"(or "ssd") is the SD Card device name, without partition (in this case mmcblk0(ou ssd), not "mmcblk0p1"(or "ssd1").  
	- Warning: Do not confunda with the HardDisk device, or it will destroy your OS!!!

- Step 5: After finish the image writing mentioned in Step 4, before remove the SD Card from the card reader, enter the command:
	sync
		so, remove and insert it in Raspberry Pi, connecting to the internet with a network cable, a USB keyboard and a HDMI cable from a monitor in the Raspberry Pi board. Next, we must plug a 5V energy source in the Raspberry Pi with at least 700mA to turn the board on.
		
- Step 6: From this Step, all next Steps will be executed in Raspberry Pi without a laptop. In the first boot, the “Raspi-Config” menu will appear in the screen. We must configure the following items:
	- Set the option Expand File System (If you do not use NOOBS !)
	- Change User Password: Original user "pi", original password "raspberry"
	- In Advanced Options, set ENABLE the Access by ssh.
	- Step 7: Reboot your Raspberry Pi.
	- Step 8: Login with user “pi” and the new password.
	- Step 9: If the IP Address is static, configure the network following apendix A or if it is DHCP, following the apendix D before go on.
	- Step 10: Install OS updates: with Raspberry Pi connected in the network, enter the command:
			sudo apt-get update
			sudo apt-get upgrade
	- Step 11: Reboot Raspberry Pi using command sudo reboot.
	- Step 12: To configure PC for access by SSH, see apendix B.


APPENDIX A: Network configuration for static IP (eg. Simoes office)
	-- Must be done always. The reboot erases all!!!
	-- See Appendix C to make it stay configured
	-- Everything between '<' and '>', must be replaced by connection values
	
	Enter the following command in the terminal:
	sudo ifconfig eth0 <IP> netmask <MASCARA>
		Eg:
		IP = 143.107.231.92
		MASCARA = 255.255.255.192
		ex.: sudo ifconfig eth0 143.107.231.92 netmask 255.255.255.192

	Enter the following command in the terminal:
	sudo route add default gw <GATEWAY>
	Ex:
		GATWAY = 143.107.231.65
		ex.: sudo route add default gw 143.107.231.65

	Enter the following command in the terminal:
	sudo nano /etc/resolv.conf
		add line: 
			nameserver 8.8.8.8
		type:
		Ctrl+O  -> Salvar
		Ctrl+X  -> Sair
		
		If using VI: 
			Xinga e Reza!!!
			type "i" to add text
			type ESC and :wq  to save and exit
			Reza e Xinga mais um pouco!!!

	Enter the following command in the terminal:
	ping www.google.com
		To test connection!

	Dentro da USP as portas baixas são bloqueadas, então, caso esteja tentando conectar de um cabo de rede de dentro da USP, executar no terminal o comando:
	sudo nano /etc/ssh/sshd_config
		---trocar de Port 22 pra Port 22000
		


APPENDIX B: To establish connection to RaspberryPi by SSH in a Laptop running Linux

In RaspberryPi:
	Enter the following command in the terminal:
	sudo nano /etc/network/interfaces
	--search the following line 
	
		iface eth0 inet manual (or iface eth0 inet dhcp)
	
	--change to
	
		iface eth0 inet static
			address 192.168.0.10
			broadcast 192.168.0.255
			network 192.168.0.0
			netmask 255.255.255.0
			gateway 192.168.0.1
			dns-nameservers 8.8.8.8
			
		(and obviously comment the other lines in the file...)
		
		type:
		Ctrl+O  -> Save
		Ctrl+X  -> Exit


In the laptop, running linux:
--> Do not forget to plug a network cable between the laptop and the Rasp board!

	Enter the command in terminal:
		sudo sysctl -w net.ipv4.ip_forward=1

	Be Carefull! Some PCs do not have eth0.
	To check yours, use: ifconfig  --> Mine is enp6s0

		IN THAT CASE, USE enp6s0 INTERFACE INSTEAD OF eth0 ON THE NEXT COMMAND!!!

	Enter the command in terminal:
	sudo ifconfig eth0 192.168.0.1 netmask 255.255.255.0
		Obs1.: 192.168.0.1   will be the laptop IP Address in the network
		Obs2.: the laptop IP Address must have the same 3 fist numbers: eg. 192.168.0._
	
	Enter the command in terminal:
	sudo iptables -t nat -A POSTROUTING -o wlan0 -j MASQUERADE
	

To establish connection to RaspberryPi just plug a network cable between the laptop and the Rasp board and enter the command:
	ssh pi@192.168.0.10 -p 22000	--> this is the IP Address that you have saved in the Raspberry interfaces file.


APPENDIX C - Static IP permanently after reboots

	A. Checking Set Up

- Boot into Raspian and log in and connect to the internet doing Apendix A commands!

- First, we need to list the network interface we currently have available:

	cat /etc/network/interfaces

		The line . . . . 
			iface eth0 inet dhcp

			- Implies that we're currently getting out IP address by DHCP, meaning it's being dynamically registered by the router. This is what we want to change!

	B. Gathering Information

- Fist of all we need to grab some information from our router and Pi. There's a couple of command we need to run to get this info. Have a pen and paper handy! . . . 
	ifconfig

- This reveals your router information, the bit you want is after eth0 (the ethernet connection). . . .
	eth0      Link encap:Ethernet  HWaddr b8:27:eb:b3:fc:2c

               inet addr:192.168.1.81  Bcast:192.168.1.255  Mask:255.255.255.0

- Write down the following information. . .

	inet addr – 192.168.1.81 (Pi's Current IP Address)
	Bcast –  192.168.1.255 (The Broadcast IP Range)
	Mask –  255.255.255.0 (Subnet Mask Address)

- We need a little more information before we proceed. Use the command. . . 

	netstat -nr

		(route -n will give you the same info)

- We need:

	'Gateway' Address – 192.168.1.254
	'Destination' Address – 192.168.1.0

	C. Editing Network Configuration

- We now need to plug this information into the Pi's network configuration file using a text editor.

	sudo nano /etc/network/interfaces

		- Simply change the line that reads:

			iface eth0 inet dhcp

			to

			iface eth0 inet static

- Then directly below this line enter the following (Please Note. You will need your own addresses we gathered in Part B, more details below). . . . 

	address 143.107.231.92
	netmask 255.255.255.192
	network 143.107.231.64
	broadcast 143.107.231.127
	gateway 143.107.231.65
	dns-nameservers 143.107.231.12 8.8.8.8

- To clarify what each part means. . . . 

address – The address you want to give your Pi, this can be any IP in the network range, but it's usually advisable to go higher rather than lower, or you could end up logging different devices to the same IP! I've selected 192.168.1.81, as we're already registered to that address (denoted by 'inet addr'), but this can be any IP address from the range192.168.1.1 to 192.168.1.255.

netmask – The 'Mask' address we wrote down earlier.

network – The router IP address, this is the 'Destination' Address was found earlier. You can also grab this off your router, it will say on the side somewhere.

broadcast – The 'Bcast' address we wrote down earlier. 

gateway – This is the 'Gateway' address we found earlier.

- So, it should look something like the above, but with your values! Remember to save before exit, CTRL+X (exit) then yes to save changes!

	
	D. Re-check Static IP Configuration

- Remove any existing leases

	sudo rm /var/lib/dhcp/*

- Then we'll need to reboot and check your changes. . . 

	sudo reboot

- One last thing that needs to be modified is the /etc/resolv.conf file. (Problem: This does not work for me!!Raspberry erases this file every time it reboots!!!!!!!! I included one line with nameservers in the "interfaces" file and it finally worked!!!!!!!!!!!
-- This file contains information of DNS name resolvers that allow your raspberry pi to resolve names to IP addresses.  For example, if you ping www.suntimebox.com the raspberry pi will have to determine the IP address of www.suntimebox.com.
- Enter the following command to edit the resolv.conf file.

	sudo nano /etc/resolv.conf
		- Enter the follow Google public dns server IP address.
		nameserver 8.8.8.8
		name server 8.8.4.4

--> The problem is that Rasp will erase this file everityme it reboots!!! Do not know why!!!
-- So, the trick is to add the line bellow to the file: etc/network/interfaces:
	dns-nameservers 143.107.231.12 8.8.8.8



----------- Abstract ----------
The file interfaces must be like this to work in Simoes room:
Edit with: sudo nano /etc/network/interfaces

	auto lo
	iface lo inet loopback

	iface eth0 inet static
	address 143.107.231.92
	netmask 255.255.255.192
	network 143.107.231.64
	broadcast 143.107.231.127
	gateway 143.107.231.65
	dns-nameservers 143.107.231.12 8.8.8.8

	auto wlan0
	allow-hotplug wlan0
	iface wlan0 inet manual
	wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf


	-->> restart the network stuff without need reboot (That did not work for me!!!!!)!:
		sudo /etc/init.d/networking restart

		
		
APPENDIX D: Configure RaspberryPi to get a DHCP address from your router automatic

	comment all other lines referent to eth0 (ex. iface eth0 inet static ...)
	Include those tree lines:
		auto eth0 
		allow-hotplug eth0
		iface eth0 inet dhcp
		
		
		
X------------------X-------------------X
			SIMOES' GUIDE
X------------------X-------------------X

1) Configure GCC to compile optimizing to ARM7 of RaspberryPi 2
	--> to check what arm version you have, run this: uname -a


	GCC : gcc -O3 -march=armv7-a -mfpu=vfp -mfloat-abi=hard hello.c -o hello.exe
	
	Create a file that overwrite GCC and you don't have to enter this command line every time you want do this:
	
	a)Create a new file with the following contents:

		#!/bin/sh
		exec /usr/bin/gcc "$@" -march=armv7-a -mfpu=vfp -mfloat-abi=hard
		
	--Change /usr/bin/gcc to your actual compiler if that's not right on your system.

	b)Save it as /home/pi/bin/gcc.

	c)Make the new script executable:
		chmod +x /home/pi/bin/gcc

	d)Repeat to create another file for g++.

	e)Add /home/pi/bin to the start of your path:
		export PATH=/home/pi/bin:$PATH
	
	e)Compile your project. Whenever your new scripts are on the path they will override whatever the makefile says.

	gcc --help
	gcc --target-help             -->  Help com parâmetros de otimização como o march
- Se botar -v  na linha de comando pra compilar, ele da um monte de mensagems dizendo tudo que ta fazendo!!
	- Assim pode-se conferir se pegou os parâmetros do Arm7
	
- Ctr-Alt-Backspace   -->  Logout 
- Ctr-Alt-F3   -->  Terminate X server and move to terminal
- startx       -->  Strart the Graphical User Interface (GUI) 

2) Firefox   --> O Firefox tem outra distribuição para a Raspberry, chama Iceweasel
	sudu apt-get install iceweasel

--------------X----------
3) WiringPi      Page: http://wiringpi.com/download-and-install/
--------------X----------
	- Biblioteca para acessar os pinos de I/O da RaspberryPi

- To obtain WiringPi using GIT:

	git clone git://git.drogon.net/wiringPi

	- If you have already used the clone operation for the first time, then
		cd wiringPi
		git pull origin

- To build/install there is a new simplified script:
	cd wiringPi
	./build

- Test wiringPi’s installation

	- Run the gpio command to check the installation:
		gpio -v
		gpio readall

Code Exemple:
	#include <wiringPi.h>
	int main (void)
	{
	  wiringPiSetup () ;
	  pinMode (0, OUTPUT) ;		// Pin 0 here (wiringPi Library) is pin 17 in the OnBoard Connector!!!
	  for (;;)
	  {
		digitalWrite (0, HIGH) ; delay (500) ;
		digitalWrite (0,  LOW) ; delay (500) ;
	  }
	  return 0 ;
	}

	-Then to compile and run, you would enter:

		gcc -Wall -o blink blink.c -lwiringPi				(Do not forget to insert -O3 -march= .......)
		sudo ./blink
		
		

4) How to configure Serial Interface to Arduino

	IMPORTANT: Raspberry has an embedded terminal interface via SERIAL PORT (Pins 8-tx and 10-rx)
	It works at speed 115200 and can be very usefull to control all Rasp features from an Arduino.
	But we MUST DISABLE THAT before connecting to Arduino with our own software!!

	To DISABLE Raspberry Embeded Terminal, first edit file:
	sudo nano /etc/inittab
	--> comment line: T0:23:respawn:/sbin/getty -L ttyAMA0 115200 vt100

	Then edit file:
	sudo nano /boot/cmdline.txt
	--> remove the  folloing parts: console=ttyAMA0,115200
	--> if it contains: kgdboc=ttyAMA0,115200    remove it too!!

	Do no forget to REBOOT !!

	Now it will be possible to communicate with Arduino usin Wiringpi library in C

	